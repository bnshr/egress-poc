apiVersion: objectbucket.io/v1alpha1
kind: ObjectBucketClaim
metadata:
  finalizers:
  - objectbucket.io/finalizer
  labels:
    app: noobaa
    bucket-provisioner: openshift-storage.noobaa.io-obc
    noobaa-domain: openshift-storage.noobaa.io
  name: loki-network-obc
  namespace: netobserv
spec:
  additionalConfig:
    bucketclass: noobaa-default-bucket-class
  generateBucketName: loki-network-odf
  objectBucketName: obc-loki-network-odf
  storageClassName: openshift-storage.noobaa.io

---
BUCKET_HOST=$(oc get -n netobserv configmap loki-network-obc -o jsonpath='{.data.BUCKET_HOST}')
BUCKET_NAME=$(oc get -n netobserv configmap loki-network-obc -o jsonpath='{.data.BUCKET_NAME}')
BUCKET_PORT=$(oc get -n netobserv configmap loki-network-obc -o jsonpath='{.data.BUCKET_PORT}')

---
ACCESS_KEY_ID=$(oc get -n netobserv secret loki-network-obc -o jsonpath='{.data.AWS_ACCESS_KEY_ID}' | base64 -d)
SECRET_ACCESS_KEY=$(oc get -n netobserv secret loki-network-obc -o jsonpath='{.data.AWS_SECRET_ACCESS_KEY}' | base64 -d)

---

oc create -n netobserv secret generic lokistack-dev-odf \
--from-literal=access_key_id="${ACCESS_KEY_ID}" \
--from-literal=access_key_secret="${SECRET_ACCESS_KEY}" \
--from-literal=bucketnames="${BUCKET_NAME}" \
--from-literal=endpoint="https://${BUCKET_HOST}:${BUCKET_PORT}"

---

kind: LokiStack
metadata:
  name: loki
  namespace: netobserv
spec:
  size: 1x.small
  storageClassName: ocs-storagecluster-ceph-rbd
  storage:
    schemas:
    - effectiveDate: "2024-04-02"
      version: v13
    secret:
      name: lokistack-dev-odf
      type: s3
    tls:
      caName: openshift-service-ca.crt
  tenants:
    mode: openshift-network
